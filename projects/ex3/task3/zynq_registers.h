/*
 * Zynq_registers.h
 *
 *  Created on: 28.5.2018
 *      Author: e0371460
 */

// https://www.xilinx.com/support/documentation/user_guides/ug585-Zynq-7000-TRM.pdf

#include <stdint.h>

#ifndef SRC_ZYNQ_REGISTERS_H_
#define SRC_ZYNQ_REGISTERS_H_

#define POINTER_TO_REGISTER(REG)		( *((volatile uint32_t*)(REG)))

#define XGPIOPS_DATA_LSW_OFFSET 0xE000A000
#define GPIO_BASE_ADDRESS XGPIOPS_DATA_LSW_OFFSET

#define XGPIOPS_DATA_OFFSET_ADDRESS 	( GPIO_BASE_ADDRESS + 0x00000040 )
#define DATA_0_ADDRESS 					( XGPIOPS_DATA_OFFSET )
#define GPIO_DATA_1_ADDRESS 			( GPIO_BASE_ADDRESS + 0x00000044 )

#define GPIO_DATA_2_ADDRESS 			( GPIO_BASE_ADDRESS + 0x00000048 )
#define GPIO_DATA_3_ADDRESS 			( GPIO_BASE_ADDRESS + 0x0000004C )
#define GPIO_DATA_0_RO_ADDRESS 			( GPIO_BASE_ADDRESS + 0x00000060 )
#define GPIO_DATA_1_RO_ADDRESS 			( GPIO_BASE_ADDRESS + 0x00000064 )
#define GPIO_DATA_2_RO_ADDRESS 			( GPIO_BASE_ADDRESS + 0x00000068 )
#define GPIO_DATA_3_RO_ADDRESS 			( GPIO_BASE_ADDRESS + 0x0000006C )
#define XGPIOPS_DIRM_OFFSET_ADDRESS 	( GPIO_BASE_ADDRESS + 0x00000204 )
#define XGPIOPS_OUTEN_OFFSET_ADDRESS 	( GPIO_BASE_ADDRESS + 0x00000208 )
#define GPIO_DIRM_1_ADDRESS 			( GPIO_BASE_ADDRESS + 0x00000244 )
#define GPIO_OEN_1_ADDRESS				( GPIO_BASE_ADDRESS + 0x00000248 )
#define GPIO_DIRM_2_ADDRESS				( GPIO_BASE_ADDRESS + 0x00000284 )
#define GPIO_OEN_2_ADDRESS				( GPIO_BASE_ADDRESS + 0x00000288 )
#define GPIO_DIRM_3_ADDRESS				( GPIO_BASE_ADDRESS + 0x000002C4 )
#define GPIO_OEN_3_ADDRESS				( GPIO_BASE_ADDRESS + 0x000002C8 )

#define XGPIOPS_DATA_OFFSET 			( POINTER_TO_REGISTER(XGPIOPS_DATA_OFFSET_ADDRESS) )
#define GPIO_DATA_0 					( XGPIOPS_DATA_OFFSET )
#define GPIO_DATA_1 					( POINTER_TO_REGISTER(GPIO_DATA_1_ADDRESS) )
#define GPIO_DATA_2 					( POINTER_TO_REGISTER(GPIO_DATA_2_ADDRESS) )
#define GPIO_DATA_3 					( POINTER_TO_REGISTER(GPIO_DATA_3_ADDRESS) )
#define GPIO_DATA_0_RO 					( POINTER_TO_REGISTER(GPIO_DATA_0_RO_ADDRESS) )
#define GPIO_DATA_1_RO 					( POINTER_TO_REGISTER(GPIO_DATA_1_RO_ADDRESS) )
#define GPIO_DATA_2_RO 					( POINTER_TO_REGISTER(GPIO_DATA_2_RO_ADDRESS) )
#define GPIO_DATA_3_RO 					( POINTER_TO_REGISTER(GPIO_DATA_3_RO_ADDRESS) )
#define XGPIOPS_DIRM_OFFSET 			( POINTER_TO_REGISTER(XGPIOPS_DIRM_OFFSET_ADDRESS) )
#define GPIO_DIRM_0						( XGPIOPS_DIRM_OFFSET )
#define GPIO_DIRM_1 					( POINTER_TO_REGISTER(GPIO_DIRM_1_ADDRESS) )
#define GPIO_DIRM_2						( POINTER_TO_REGISTER(GPIO_DIRM_2_ADDRESS) )
#define GPIO_DIRM_3						( POINTER_TO_REGISTER(GPIO_DIRM_3_ADDRESS) )
#define XGPIOPS_OUTEN_OFFSET 			( POINTER_TO_REGISTER(XGPIOPS_OUTEN_OFFSET_ADDRESS) )
#define GPIO_OEN_0						( XGPIOPS_OUTEN_OFFSET )
#define GPIO_OEN_1						( POINTER_TO_REGISTER(GPIO_OEN_1_ADDRESS) )
#define GPIO_OEN_2						( POINTER_TO_REGISTER(GPIO_OEN_2_ADDRESS) )
#define GPIO_OEN_3						( POINTER_TO_REGISTER(GPIO_OEN_3_ADDRESS) )
/*
#define TTC0_BASE_ADDRESS				0xF8001000
#define XTTCPS_CLK_CNTRL_OFFSET			( TTC0_BASE_ADDRESS )
#define Clock_Control_2					( TTC0_BASE_ADDRESS + 0x00000004 )
#define XTTCPS_CLK_CNTRL_PS_EN_MASK		( 0b1 << 0 )
#define XTTCPS_CLK_CNTRL_PS_VAL_MASK	( 0b111 << 1 )
#define XTTCPS_CLK_CNTRL_SRC_MASK		( 0b1 << 5)
#define XTTCPS_CLK_CNTRL_EXT_EDGE_MASK	( 0b1 << 6 )
*/
#define POINTER_TO_TTC_REGISTER(TMR, REG)( *((volatile uint32_t*)(XPS_TTC##TMR##_BASEADDR + REG)))

#define TTC0_CLK_CNTRL					( POINTER_TO_TTC_REGISTER(0, XTTCPS_CLK_CNTRL_OFFSET) )
#define TTC0_CLK_CNTRL2					( POINTER_TO_TTC_REGISTER(0, 0x00000004) )
#define TTC0_CLK_CNTRL3					( POINTER_TO_TTC_REGISTER(0, 0x00000008) )
#define TTC0_CNT_CNTRL					( POINTER_TO_TTC_REGISTER(0, XTTCPS_CNT_CNTRL_OFFSET) )
#define TTC0_CNT_CNTRL2					( POINTER_TO_TTC_REGISTER(0, 0x00000010) )
#define TTC0_CNT_CNTRL3					( POINTER_TO_TTC_REGISTER(0, 0x00000014) )
#define TTC0_COUNT_VALUE				( POINTER_TO_TTC_REGISTER(0, XTTCPS_COUNT_VALUE_OFFSET) )
#define TTC0_COUNT_VALUE2				( POINTER_TO_TTC_REGISTER(0, 0x0000001C) )
#define TTC0_COUNT_VALUE3				( POINTER_TO_TTC_REGISTER(0, 0x00000020) )
#define TTC0_INTERVAL_VAL				( POINTER_TO_TTC_REGISTER(0, XTTCPS_INTERVAL_VAL_OFFSET) )
#define TTC0_INTERVAL_VAL2				( POINTER_TO_TTC_REGISTER(0, 0x00000028) )
#define TTC0_INTERVAL_VAL3				( POINTER_TO_TTC_REGISTER(0, 0x0000002C) )
#define TTC0_MATCH_0					( POINTER_TO_TTC_REGISTER(0, XTTCPS_MATCH_0_OFFSET) )
#define TTC0_MATCH_1_COUNTER_2			( POINTER_TO_TTC_REGISTER(0, 0x00000034) )
#define TTC0_MATCH_1_COUNTER_3			( POINTER_TO_TTC_REGISTER(0, 0x00000038) )
#define TTC0_MATCH_1					( POINTER_TO_TTC_REGISTER(0, XTTCPS_MATCH_1_OFFSET) )
#define TTC0_MATCH_2_COUNTER_2			( POINTER_TO_TTC_REGISTER(0, 0x00000040) )
#define TTC0_MATCH_2_COUNTER_3			( POINTER_TO_TTC_REGISTER(0, 0x00000044) )
#define TTC0_MATCH_2					( POINTER_TO_TTC_REGISTER(0, XTTCPS_MATCH_2_OFFSET) )
#define TTC0_MATCH_3_COUNTER_2			( POINTER_TO_TTC_REGISTER(0, 0x0000004C) )
#define TTC0_MATCH_3_COUNTER_3			( POINTER_TO_TTC_REGISTER(0, 0x00000050) )
#define TTC0_ISR						( POINTER_TO_TTC_REGISTER(0, XTTCPS_ISR_OFFSET) )
#define TTC0_ISR_2						( POINTER_TO_TTC_REGISTER(0, 0x00000058))
#define TTC0_ISR_3						( POINTER_TO_TTC_REGISTER(0, 0x0000005C))
#define TTC0_IER						( POINTER_TO_TTC_REGISTER(0, XTTCPS_IER_OFFSET) )
#define TTC0_IER_2						( POINTER_TO_TTC_REGISTER(0, 0x00000064) )
#define TTC0_IER_3						( POINTER_TO_TTC_REGISTER(0, 0x00000068) )

#define TTC1_CLK_CNTRL					( POINTER_TO_TTC_REGISTER(1, XTTCPS_CLK_CNTRL_OFFSET) )
#define TTC1_CLK_CNTRL2					( POINTER_TO_TTC_REGISTER(1, 0x00000004) )
#define TTC1_CLK_CNTRL3					( POINTER_TO_TTC_REGISTER(1, 0x00000008) )
#define TTC1_CNT_CNTRL					( POINTER_TO_TTC_REGISTER(1, XTTCPS_CNT_CNTRL_OFFSET) )
#define TTC1_CNT_CNTRL2					( POINTER_TO_TTC_REGISTER(1, 0x00000010) )
#define TTC1_CNT_CNTRL3					( POINTER_TO_TTC_REGISTER(1, 0x00000014) )
#define TTC1_COUNT_VALUE				( POINTER_TO_TTC_REGISTER(1, XTTCPS_COUNT_VALUE_OFFSET) )
#define TTC1_COUNT_VALUE2				( POINTER_TO_TTC_REGISTER(1, 0x0000001C) )
#define TTC1_COUNT_VALUE3				( POINTER_TO_TTC_REGISTER(1, 0x00000020) )
#define TTC1_INTERVAL_VAL				( POINTER_TO_TTC_REGISTER(1, XTTCPS_INTERVAL_VAL_OFFSET) )
#define TTC1_INTERVAL_VAL2				( POINTER_TO_TTC_REGISTER(1, 0x00000028) )
#define TTC1_INTERVAL_VAL3				( POINTER_TO_TTC_REGISTER(1, 0x0000002C) )
#define TTC1_MATCH_0					( POINTER_TO_TTC_REGISTER(1, XTTCPS_MATCH_0_OFFSET) )
#define TTC1_MATCH_1_COUNTER_2			( POINTER_TO_TTC_REGISTER(1, 0x00000034) )
#define TTC1_MATCH_1_COUNTER_3			( POINTER_TO_TTC_REGISTER(1, 0x00000038) )
#define TTC1_MATCH_1					( POINTER_TO_TTC_REGISTER(1, XTTCPS_MATCH_1_OFFSET) )
#define TTC1_MATCH_2_COUNTER_2			( POINTER_TO_TTC_REGISTER(1, 0x00000040) )
#define TTC1_MATCH_2_COUNTER_3			( POINTER_TO_TTC_REGISTER(1, 0x00000044) )
#define TTC1_MATCH_2					( POINTER_TO_TTC_REGISTER(1, XTTCPS_MATCH_2_OFFSET) )
#define TTC1_MATCH_3_COUNTER_2			( POINTER_TO_TTC_REGISTER(1, 0x0000004C) )
#define TTC1_MATCH_3_COUNTER_3			( POINTER_TO_TTC_REGISTER(1, 0x00000050) )
#define TTC1_ISR						( POINTER_TO_TTC_REGISTER(1, XTTCPS_ISR_OFFSET) )
#define TTC1_ISR_2						( POINTER_TO_TTC_REGISTER(1, 0x00000058))
#define TTC1_ISR_3						( POINTER_TO_TTC_REGISTER(1, 0x0000005C))
#define TTC1_IER						( POINTER_TO_TTC_REGISTER(1, XTTCPS_IER_OFFSET) )
#define TTC1_IER_2						( POINTER_TO_TTC_REGISTER(1, 0x00000064) )
#define TTC1_IER_3						( POINTER_TO_TTC_REGISTER(1, 0x00000068) )

#define ICDISER1_ADDRESS				( XPS_SCU_PERIPH_BASE + 0x00001104 )
#define ICDISER1						( POINTER_TO_REGISTER(ICDISER1_ADDRESS) )

#define XDCFG_UNLOCK_OFFSET_ADDRESS 	( XDCFG_BASE_ADDRESS + XADCPS_UNLK_OFFSET )

#define XDCFG_UNLOCK_OFFSET				( POINTER_TO_REGISTER(XADCIF_CFG_ADDRESS) )

#define XADCIF_CFG_ADDRESS				( XPAR_PS7_XADC_0_BASEADDR + XADCPS_CFG_OFFSET )
#define XADCIF_INT_STS_ADDRESS			( XPAR_PS7_XADC_0_BASEADDR + XADCPS_INT_STS_OFFSET )
#define XADCIF_INT_MASK_ADDRESS			( XPAR_PS7_XADC_0_BASEADDR + XADCPS_INT_MASK_OFFSET )
#define XADCIF_MSTS_ADDRESS				( XPAR_PS7_XADC_0_BASEADDR + XADCPS_MSTS_OFFSET )
#define XADCIF_CMDFIFO_ADDRESS			( XPAR_PS7_XADC_0_BASEADDR + XADCPS_CMDFIFO_OFFSET )
#define XADCIF_RDFIFO_ADDRESS			( XPAR_PS7_XADC_0_BASEADDR + XADCPS_RDFIFO_OFFSET )
#define XADCIF_MCTL_ADDRESS				( XPAR_PS7_XADC_0_BASEADDR + XADCPS_MCTL_OFFSET )

#define XADCIF_CFG						( POINTER_TO_REGISTER(XADCIF_CFG_ADDRESS) )
#define XADCIF_INT_STS					( POINTER_TO_REGISTER(XADCIF_INT_STS_ADDRESS) )
#define XADCIF_INT_MASK					( POINTER_TO_REGISTER(XADCIF_INT_MASK_ADDRESS) )
#define XADCIF_MSTS						( POINTER_TO_REGISTER(XADCIF_MSTS_ADDRESS) )
#define XADCIF_CMDFIFO					( POINTER_TO_REGISTER(XADCIF_CMDFIFO_ADDRESS) )
#define XADCIF_RDFIFO					( POINTER_TO_REGISTER(XADCIF_RDFIFO_ADDRESS) )
#define XADCIF_MCTL						( POINTER_TO_REGISTER(XADCIF_MCTL_ADDRESS) )


#endif /* SRC_ZYNQ_REGISTERS_H_ */
